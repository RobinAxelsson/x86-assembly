# x86_64 assembly and nasm

## Prerequisites

OS: Linux Debian (I use Kali)

### Assembler

nasm (netwide assembler): open source assembler and disassembler for x86 and x86-64 architectures with its own syntax (compare with masm microsoft macro assembler)

```shell

sudo apt update
sudo apt install nasm -y

```

### Debugger

GDB - gnu debugger

```shell

#https://www.sourceware.org/gdb/
#Gnu debugger

sudo apt-get update
sudo apt-get install gdb

#GEF https://github.com/hugsy/gef
# plugin for gnu -> CLI UI

wget -O ~/.gdbinit-gef.py -q https://gef.blah.cat/py
echo source ~/.gdbinit-gef.py >> ~/.gdbinit

```

### Using debugger


```shell

gef➤  b _start

Breakpoint 1 at 0x401000

gef➤  b *0x40100a
Breakpoint 1 at 0x40100a

#examine

x/4ig $rip

#x - examine
#4 - count we want to examine
#i - format (instruction)
#g - giant 8 bytes

x/s 0x402000
# "Hello HTB Academy!"

x/wx 0x401000
#gives little endian


#### Stepping

stepi #si - single stepping, si 3 three steps
step # runs to next function
next #n step over

help patch
r #run

c #continue

delete 1 # delete breakpoint
info breakpoints

patch string 0x402000 "123456789\\x0a" 
set $rdx=0x0a

```